# -*- coding: utf-8 -*-
"""Basic_plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/0B7O2IxKKDPZmMnVJdTJUYk1tMkEweWlZcGhOdHpwbDk4b2lB
"""

# Load the Drive helper and mount
# from google.colab import drive

# This will prompt for authorization.
# drive.mount('/content/drive')

import os
   
# os.chdir('/content/drive/My Drive/drive1/SIH2019/ephemeris')
# os.getcwd()

import pandas as pd
import numpy as np
from fbprophet import Prophet
import glob
import matplotlib.pyplot as plt

# os.chdir('csv_files')
df_final = pd.DataFrame()
print("THIS IS IT -- ",os.getcwd())

# for file in glob.glob("*.csv"):
df = pd.read_csv("scripts/predicted_6.csv")
print(df.head())
df_final = df_final.append(df, ignore_index=True)
# # os.chdir('..')

df_final['epoch_time']=pd.to_datetime(df_final['epoch_time'], format='%Y-%m-%d %H:%M:%S')
df_final = df_final.sort_values(by=['epoch_time'])
# df_final.shape

df_prn_2 = df_final.loc[df_final['prn'] == 3].reset_index()
# df_prn_2.head(10)

output_location = "static/output_images/"



df_prn_2_sv_clock_bias = df_prn_2[['epoch_time','sv_clock_bias']]
df_prn_2_sv_clock_bias.head(5)
df_prn_2_sv_clock_bias.plot(x='epoch_time', y='sv_clock_bias')
plt.savefig(output_location+"sv_clock_bias.png")

df_prn_2_sv_clock_drift = df_prn_2[['epoch_time','sv_clock_drift']]
df_prn_2_sv_clock_drift.plot(x='epoch_time', y='sv_clock_drift')

plt.savefig(output_location+"sv_clock_drift.png")

df_prn_2_sv_clock_drift_rate = df_prn_2[['epoch_time','sv_clock_drift_rate']]
df_prn_2_sv_clock_drift_rate.plot(x='epoch_time', y='sv_clock_drift_rate')
plt.savefig(output_location+"sv_clock_drift_rate.png")


df_prn_2_iode = df_prn_2[['epoch_time','iode']]
df_prn_2_iode.plot(x='epoch_time', y='iode')
plt.savefig(output_location+"iode.png")



df_prn_2_correction_radius_sine = df_prn_2[['epoch_time','correction_radius_sine']]
df_prn_2_correction_radius_sine.plot(x='epoch_time', y='correction_radius_sine')
plt.savefig(output_location+"correction_radius_sine.png")


df_prn_2_mean_motion = df_prn_2[['epoch_time','mean_motion']]
df_prn_2_mean_motion.plot(x='epoch_time', y='mean_motion')
plt.savefig(output_location+"mean_motion.png")


df_prn_2_mean_anomaly = df_prn_2[['epoch_time','mean_anomaly']]
df_prn_2_mean_anomaly.plot(x='epoch_time', y='mean_anomaly')
plt.savefig(output_location+"mean_anomaly.png")


df_prn_2_correction_latitude_cosine = df_prn_2[['epoch_time','correction_latitude_cosine']]
df_prn_2_correction_latitude_cosine.plot(x='epoch_time', y='correction_latitude_cosine')
plt.savefig(output_location+"correction_latitude_cosine.png")


df_prn_2_essentricity = df_prn_2[['epoch_time','essentricity']]
df_prn_2_essentricity.plot(x='epoch_time', y='essentricity')
plt.savefig(output_location+"essentricity.png")


df_prn_2_correction_latitude_sine = df_prn_2[['epoch_time','correction_latitude_sine']]
df_prn_2_correction_latitude_sine.plot(x='epoch_time', y='correction_latitude_sine')
plt.savefig(output_location+"correction_latitude_sine.png")


df_prn_2_sqrt_semi_major_axis = df_prn_2[['epoch_time','sqrt_semi_major_axis']]
df_prn_2_sqrt_semi_major_axis.plot(x='epoch_time', y='sqrt_semi_major_axis')
plt.savefig(output_location+"sqrt_semi_major_axis.png")


df_prn_2_time_of_ephemeris = df_prn_2[['epoch_time','time_of_ephemeris']]
df_prn_2_time_of_ephemeris.plot(x='epoch_time', y='time_of_ephemeris')
plt.savefig(output_location+"time_of_ephemeris.png")


df_prn_2_correction_inclination_cosine = df_prn_2[['epoch_time','correction_inclination_cosine']]
df_prn_2_correction_inclination_cosine.plot(x='epoch_time', y='correction_inclination_cosine')
plt.savefig(output_location+"correction_inclination_cosine.png")


df_prn_2_OMEGA = df_prn_2[['epoch_time','OMEGA']]
df_prn_2_OMEGA.plot(x='epoch_time', y='OMEGA')
plt.savefig(output_location+"OMEGA.png")


df_prn_2_correction_inclination_sine = df_prn_2[['epoch_time','correction_inclination_sine']]
df_prn_2_correction_inclination_sine.plot(x='epoch_time', y='correction_inclination_sine')
plt.savefig(output_location+"correction_inclination_sine.png")


df_prn_2_inclination = df_prn_2[['epoch_time','inclination']]
df_prn_2_inclination.plot(x='epoch_time', y='inclination')
plt.savefig(output_location+"inclination.png")


df_prn_2_correction_radius_cosine = df_prn_2[['epoch_time','correction_radius_cosine']]
df_prn_2_correction_radius_cosine.plot(x='epoch_time', y='correction_radius_cosine')
plt.savefig(output_location+"correction_radius_cosine.png")


df_prn_2_omega = df_prn_2[['epoch_time','omega']]
df_prn_2_omega.plot(x='epoch_time', y='omega')
plt.savefig(output_location+"omega.png")


df_prn_2_OMEGA_dot = df_prn_2[['epoch_time','OMEGA_dot']]
df_prn_2_OMEGA_dot.plot(x='epoch_time', y='OMEGA_dot')
plt.savefig(output_location+"OMEGA_dot.png")


df_prn_2_inclination_rate = df_prn_2[['epoch_time','inclination_rate']]
df_prn_2_inclination_rate.plot(x='epoch_time', y='inclination_rate')
plt.savefig(output_location+"inclination_rate.png")


df_prn_2_codes = df_prn_2[['epoch_time','codes']]
df_prn_2_codes.plot(x='epoch_time', y='codes')
plt.savefig(output_location+"codes.png")


df_prn_2_gps_week = df_prn_2[['epoch_time','gps_week']]
df_prn_2_gps_week.plot(x='epoch_time', y='gps_week')
plt.savefig(output_location+"gps_week.png")


df_prn_2_l2_p_data_flag = df_prn_2[['epoch_time','l2_p_data_flag']]
df_prn_2_l2_p_data_flag.plot(x='epoch_time', y='l2_p_data_flag')
plt.savefig(output_location+"l2_p_data_flag.png")


df_prn_2_sv_accuracy = df_prn_2[['epoch_time','sv_accuracy']]
df_prn_2_sv_accuracy.plot(x='epoch_time', y='sv_accuracy')
plt.savefig(output_location+"sv_accuracy.png")


df_prn_2_sv_health = df_prn_2[['epoch_time','sv_health']]
df_prn_2_sv_health.plot(x='epoch_time', y='sv_health')
plt.savefig(output_location+"sv_health.png")


df_prn_2_tgd = df_prn_2[['epoch_time','tgd']]
df_prn_2_tgd.plot(x='epoch_time', y='tgd')
plt.savefig(output_location+"tgd.png")

# 
df_prn_2_iodc = df_prn_2[['epoch_time','iodc']]
df_prn_2_iodc.plot(x='epoch_time', y='iodc')
plt.savefig(output_location+"iodc.png")


df_prn_2_t_tx = df_prn_2[['epoch_time','t_tx']]
df_prn_2_t_tx.plot(x='epoch_time', y='t_tx')
plt.savefig(output_location+"t_tx.png")


df_prn_2_fit_interval = df_prn_2[['epoch_time','fit_interval']]
df_prn_2_fit_interval.plot(x='epoch_time', y='fit_interval')
plt.savefig(output_location+"fit_interval.png")


# df_final['prn'].unique()